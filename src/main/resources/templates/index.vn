<!DOCTYPE html>
<html lang="en">
   <head>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
      <meta name="description" content="">
      <meta name="author" content="">
      <title>Bare - Start Bootstrap Template</title>
      <!-- Bootstrap core CSS -->
      <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
      <head>
         <meta name="viewport" content="width=device-width, initial-scale=1.0">
         <style>
            * {
            box-sizing: border-box;
            }
            body {
            font: 16px Arial;
            }
            /*the container must be positioned relative:*/
            .autocomplete {
            position: relative;
            display: inline-block;
            }
            input {
            border: 1px solid transparent;
            background-color: #f1f1f1;
            padding: 10px;
            font-size: 16px;
            }
            input[type=text] {
            background-color: #f1f1f1;
            width: 100%;
            }
            input[type=submit] {
            background-color: DodgerBlue;
            color: #fff;
            cursor: pointer;
            }
            .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            border-bottom: none;
            border-top: none;
            z-index: 99;
            /*position the autocomplete items to be the same width as the container:*/
            top: 100%;
            left: 0;
            right: 0;
            }
            .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
            }
            /*when hovering an item:*/
            .autocomplete-items div:hover {
            background-color: #e9e9e9;
            }
            /*when navigating through the items using the arrow keys:*/
            .autocomplete-active {
            background-color: DodgerBlue !important;
            color: #ffffff;
            }
         </style>
   </head>
   <body>
      <!-- Navigation -->
      <nav class="navbar navbar-expand-lg navbar-dark bg-dark static-top">
         <div class="container">
            <a class="navbar-brand" href="#">Předpověď počasí</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
               <ul class="navbar-nav ml-auto">
                  <li class="nav-item active">
                     <a class="nav-link" href="/">den
                     <span class="sr-only">(current)</span>
                     </a>
                  </li>
                  <li class="nav-item">
                     <a class="nav-link" href="/week">týden</a>
                  </li>
                  <li class="nav-item">
                     <a class="nav-link" href="/week2">14 dní</a>
                  </li>
               </ul>
            </div>
         </div>
      </nav>
      <!-- Page Content -->
      <div class="container">
         <div class="row">
            <div class="col-lg-12 text-center">
               <h1 class="mt-5">$hello</h1>
               #if( $readOnly == false )
                   <p class="lead">Změnit předpověď pro stát: </p>
                   <form autocomplete="off" action="/state/change" method="post">
                      <div class="autocomplete" style="width:300px;">
                         <input id="myInput" type="text" name="State" placeholder="Zadejte stát">
                      </div>
                      <input type="submit" value="Změnit">
                   </form>
                   <p class="lead">Přidat město: </p>
                   <form autocomplete="off" action="/city/add" method="post">
                      <div class="autocomplete" style="width:300px;">
                         <input id="myInput2" type="text" name="City" placeholder="Zadejte město">
                      </div>
                      <input type="submit" value="Přidat">
                   </form>
               #end
               <p></p>
               <p></p>
                <p class="lead">Předpovědi</p>
               <ul class="list-unstyled">
                  #foreach( $city in $cities )
                  <li>
                  <form action="/city/delete" method="post">
                      <label >$city.cityName ~$city.averageTemp °C</label> #if( $readOnly == false ) <input style="padding: 3px" type="submit" value="X" />  #end
                      <input type="hidden" name="City" value="$city.cityName"/>
                  </form>
                  <button onClick="clc('div$city.cityName')">Předpověď</button>
                  #if( $readOnly == false )
                    <form action="/city/export/$city.cityName" method="post">
                         <input style="padding: 3px" type="submit" value="export" />
                    </form>
                    <form action="/city/import" method="post" enctype="multipart/form-data">
                        <input id="file" type="file" name="file" class="file-input" required />
                        <p></p>
                        <input style="padding: 3px" type="submit" value="Import" />
                    </form>
                  #end
                    <div id="div$city.cityName" style="display:none">
                      #foreach( $we in $city.cities )
                      <form action="/temp/delete" method="post">
                        <p>$we.dateStr - teplota: $we.temp, vlhkost: $we.humidity, rychlost větru: $we.windSpeed #if( $readOnly == false ) <input style="padding: 3px" type="submit" value="x" /></p> #end
                        <input type="hidden" name="City" value="$city.cityName"/>
                        <input type="hidden" name="Date" value="$we.date"/>
                      </form>
                     #end
                     </div>
                  </li>
                  #end
               </ul>
            </div>
         </div>
      </div>

    <script>
    function clc(divShowHide) {
       console.log("---");
       console.log(divShowHide);
      var x = document.getElementById(divShowHide);
      if (x.style.display === "none") {
        x.style.display = "block";
      } else {
        x.style.display = "none";
      }
    }
    </script>

      <script>
         function autocomplete(inp, arr) {
           /*the autocomplete function takes two arguments,
           the text field element and an array of possible autocompleted values:*/
           var currentFocus;
           /*execute a function when someone writes in the text field:*/
           inp.addEventListener("input", function(e) {
               var a, b, i, val = this.value;
               /*close any already open lists of autocompleted values*/
               closeAllLists();
               if (!val) { return false;}
               currentFocus = -1;
               /*create a DIV element that will contain the items (values):*/
               a = document.createElement("DIV");
               a.setAttribute("id", this.id + "autocomplete-list");
               a.setAttribute("class", "autocomplete-items");
               /*append the DIV element as a child of the autocomplete container:*/
               this.parentNode.appendChild(a);
               /*for each item in the array...*/
               for (i = 0; i < arr.length; i++) {
                 /*check if the item starts with the same letters as the text field value:*/
                 if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                   /*create a DIV element for each matching element:*/
                   b = document.createElement("DIV");
                   /*make the matching letters bold:*/
                   b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                   b.innerHTML += arr[i].substr(val.length);
                   /*insert a input field that will hold the current array item's value:*/
                   b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
                   /*execute a function when someone clicks on the item value (DIV element):*/
                   b.addEventListener("click", function(e) {
                       /*insert the value for the autocomplete text field:*/
                       inp.value = this.getElementsByTagName("input")[0].value;
                       /*close the list of autocompleted values,
                       (or any other open lists of autocompleted values:*/
                       closeAllLists();
                   });
                   a.appendChild(b);
                 }
               }
           });
           /*execute a function presses a key on the keyboard:*/
           inp.addEventListener("keydown", function(e) {
               var x = document.getElementById(this.id + "autocomplete-list");
               if (x) x = x.getElementsByTagName("div");
               if (e.keyCode == 40) {
                 /*If the arrow DOWN key is pressed,
                 increase the currentFocus variable:*/
                 currentFocus++;
                 /*and and make the current item more visible:*/
                 addActive(x);
               } else if (e.keyCode == 38) { //up
                 /*If the arrow UP key is pressed,
                 decrease the currentFocus variable:*/
                 currentFocus--;
                 /*and and make the current item more visible:*/
                 addActive(x);
               } else if (e.keyCode == 13) {
                 /*If the ENTER key is pressed, prevent the form from being submitted,*/
                 e.preventDefault();
                 if (currentFocus > -1) {
                   /*and simulate a click on the "active" item:*/
                   if (x) x[currentFocus].click();
                 }
               }
           });
           function addActive(x) {
             /*a function to classify an item as "active":*/
             if (!x) return false;
             /*start by removing the "active" class on all items:*/
             removeActive(x);
             if (currentFocus >= x.length) currentFocus = 0;
             if (currentFocus < 0) currentFocus = (x.length - 1);
             /*add class "autocomplete-active":*/
             x[currentFocus].classList.add("autocomplete-active");
           }
           function removeActive(x) {
             /*a function to remove the "active" class from all autocomplete items:*/
             for (var i = 0; i < x.length; i++) {
               x[i].classList.remove("autocomplete-active");
             }
           }
           function closeAllLists(elmnt) {
             /*close all autocomplete lists in the document,
             except the one passed as an argument:*/
             var x = document.getElementsByClassName("autocomplete-items");
             for (var i = 0; i < x.length; i++) {
               if (elmnt != x[i] && elmnt != inp) {
                 x[i].parentNode.removeChild(x[i]);
               }
             }
           }
           /*execute a function when someone clicks in the document:*/
           document.addEventListener("click", function (e) {
               closeAllLists(e.target);
           });
         }

         /*An array containing all the country names in the world:*/
         var countries = [#foreach( $state in $states ) "$state", #end ];
         var CitesOfSelectedCountries = [#foreach( $cityOfC in $citiesOfC ) "$cityOfC", #end ];

         /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
         autocomplete(document.getElementById("myInput"), countries);
         autocomplete(document.getElementById("myInput2"), CitesOfSelectedCountries);
      </script>
      <!-- Bootstrap core JavaScript -->
      <script src="vendor/jquery/jquery.slim.min.js"></script>
      <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
   </body>
</html>